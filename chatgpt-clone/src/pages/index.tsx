import { Avatar } from '@/components/Avatar'
import { ChatGPTLogo, PlusIcon, SendIcon } from '@/components/Icons'
import Head from 'next/head'
import { ReactNode } from 'react'

type LayoutProps = {
  children: ReactNode
}

function Layout({ children }: LayoutProps) {
  return (
    <>
      <Head>
        <title>ChatGPT Clone</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex flex-col min-h-screen md:flex-row'>
        <Aside />
        {children}
      </div>
    </>
  )
}

function Aside() {
  return (
    <aside className='bg-gptdarkgray md:w-[260px] w-full p-2 fixed md:relative'>
      <nav className='flex flex-col flex-1 h-full space-y-1'>
        <a className='flex py-3 px-3 items-center gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm mb-2 flex-shrink-0 border border-white/20'>
          <PlusIcon />
          New chat
        </a>
      </nav>
    </aside>
  )
}

const UserAvatar = () => {
  return (
    <img
      src='https://chat.openai.com/_next/image?url=https%3A%2F%2Flh3.googleusercontent.com%2Fa%2FAEdFTp5aKpllWAjJz_sR85T4q0ZA6z6lKHmSsHfbOK3D%3Ds96-c&w=32&q=75'
      alt='imagen de usuario'
      className='rounded-sm'
    />
  )
}

function Message({ ia, message }: ChatMessage) {
  const avatar = ia ? <ChatGPTLogo /> : <UserAvatar />
  return (
    <div className={`text-gray-100 ${ia ? 'bg-gptlightgray' : 'bg-gptgray'}`}>
      <article className='flex gap-4 m-auto max-w-3xl p-6'>
        <Avatar>{avatar}</Avatar>
        <div className='min-h-[20px] flex flex-col items-start gap-4 whitespace-pre-wrap flex-1'>
          <div className='prose-invert w-full break-words light'>
            <p>{message}</p>
          </div>
        </div>
      </article>
    </div>
  )
}
interface ChatMessage {
  id: number
  ia: boolean
  message: string
}

function Chat() {
  const messages: ChatMessage[] = [
    {
      id: 1,
      ia: false,
      message: 'Explain nodejs'
    },
    {
      id: 2,
      ia: true,
      message:
        'JSON (JavaScript Object Notation) is a lightweight data-interchange format that is easy for humans to read and write and easy for machines to parse and generate. It is a text-based format that uses a simple syntax to describe data objects and arrays, consisting of key-value pairs, and is commonly used for asynchronous browser/server communication and data storage. JSON is used to represent data structures and objects in a standard, easily readable format.'
    }
  ]

  return (
    <div className='bg-gptgray w-full min-h-screen justify-between flex flex-col pt-[70px] md:pt-0'>
      <main className='flex flex-col'>
        {messages.map((entry) => (
          <Message key={entry.id} {...entry} />
        ))}
      </main>
      <ChatForm />
    </div>
  )
}

function ChatForm() {
  return (
    <section className='flex justify-center items-center'>
      <form className='flex flex-row max-w-3xl pt-6 w-full mb-6 px-2 md:px-6'>
        <div className='relative flex flex-col flex-grow w-full px-4 py-3 text-white border rounded-md shadow-lg bg-gptlightgray border-gray-900/50'>
          <textarea className='flex w-full h-6 resize-none bg-transparent m-0 border-0 outline-none' />
          <button className='absolute p-1 rounded-md bottom-2.5 right-2.5'>
            <SendIcon />
          </button>
        </div>
      </form>
    </section>
  )
}

export default function Home() {
  return (
    <>
      <Layout>
        <Chat />
      </Layout>
    </>
  )
}
